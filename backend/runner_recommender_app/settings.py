"""
Django settings for runner_recommender_app project.

Generated by 'django-admin startproject' using Django 2.2.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os
import django_heroku
import dj_database_url

from configurations import Configuration


class BaseSettings(Configuration):

    # Build paths inside the project like this: os.path.join(BASE_DIR, ...)
    BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

    # Quick-start development settings - unsuitable for production
    # See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

    # SECURITY WARNING: keep the secret key used in production secret!
    SECRET_KEY = '=m254!p5cq#)clgs$cpv)tp*s9-y&&todate8tqk4(ol4h#cbz'

    # SECURITY WARNING: don't run with debug turned on in production!
    # DEBUG = True
    DEBUG = True

    ALLOWED_HOSTS = []

    # Application definition
    INSTALLED_APPS = [
        'django.contrib.admin',
        'django.contrib.auth',
        'django.contrib.contenttypes',
        'django.contrib.sessions',
        'django.contrib.messages',
        'django.contrib.staticfiles',
        # Async data store
        'django_celery_results',
        # app specifics
        'rest_framework',
        'runner_api_backend',
        'upload',
    ]

    MIDDLEWARE = [
        'django.middleware.security.SecurityMiddleware',
        'django.contrib.sessions.middleware.SessionMiddleware',
        'django.middleware.common.CommonMiddleware',
        'django.middleware.csrf.CsrfViewMiddleware',
        'django.contrib.auth.middleware.AuthenticationMiddleware',
        'django.contrib.messages.middleware.MessageMiddleware',
        'django.middleware.clickjacking.XFrameOptionsMiddleware',
    ]


    ROOT_URLCONF = 'runner_recommender_app.urls'

    TEMPLATES = [
        {
            'BACKEND': 'django.template.backends.django.DjangoTemplates',
            'DIRS': [],
            'APP_DIRS': True,
            'OPTIONS': {
                'context_processors': [
                    'django.template.context_processors.debug',
                    'django.template.context_processors.request',
                    'django.contrib.auth.context_processors.auth',
                    'django.contrib.messages.context_processors.messages',
                ],
            },
        },
    ]

    # Database
    # https://docs.djangoproject.com/en/2.2/ref/settings/#databases
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql_psycopg2',
            'NAME': 'runner_app',
            'USER': 'runner_app_admin',
            'PASSWORD': 'admin',
            'HOST': 'localhost',
            'PORT': '',
            'CONN_MAX_AGE': 500, # maximum age for connections in 
        }
    }

    # Password validation
    # https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

    AUTH_PASSWORD_VALIDATORS = [
        {
            'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
        },
        {
            'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
        },
        {
            'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
        },
        {
            'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
        },
    ]

    # Internationalization
    # https://docs.djangoproject.com/en/2.2/topics/i18n/
    LANGUAGE_CODE = 'en-us'

    TIME_ZONE = 'UTC'

    USE_I18N = True

    USE_L10N = True

    USE_TZ = True

    # Static files (CSS, JavaScript, Images)
    # https://docs.djangoproject.com/en/2.2/howto/static-files/
    # STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
    STATIC_URL = '/static/'

    # Add REST_FRAMEWORK here
    REST_FRAMEWORK = {
            'DEFAULT_PAGINATION_CLASS':
            'rest_framework.pagination.PageNumberPagination',
            'PAGE_SIZE': 10,
            'DEFAULT_AUTHENTICATION_CLASSES':
            ('rest_framework.authentication.BasicAuthentication',
             'rest_framework.authentication.SessionAuthentication')
    }

    # Celery
    CELERY_TASK_SERIALIZER='json'
    # Celery backend for the results
    CELERY_RESULT_BACKEND='django-db'

class DevSettings(BaseSettings):

    CELERY_BROKER_URL = 'amqp://' # when running locally
    DEBUG = True
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql_psycopg2',
            'NAME': 'runner_app',
            'USER': 'runner_app_admin',
            'PASSWORD': 'admin',
            'HOST': 'localhost',
            'PORT': '',
            'CONN_MAX_AGE': 500, # maximum age for connections in 
        }
    }

class ProdSettings(BaseSettings):
    # Production
    DEBUG = False
    ALLOWED_HOSTS = ['.herokuapp.com']
    WSGI_APPLICATION = 'runner_recommender_app.wsgi.application'
    DATABASES = {
        'default' : dj_database_url.config(default='postgres://pssuianhxoobno:9a88699e02fe12c831f5580275ca9f09fa2308b67dc74bccb38c43c434aae50e@ec2-50-19-127-115.compute-1.amazonaws.com:5432/d8cbao2d2fr26s',
            conn_max_age=500)

    }
    # when running in the cloud
    CELERY_BROKER_URL = 'amqp://dcyujgri:AU9B6cFJXur8BSZDun2uSjRT_wPBR_Id@fish.rmq.cloudamqp.com/dcyujgri'
    STATIC_ROOT = os.path.join(BaseSettings.BASE_DIR, 'staticfiles')
    # extra places for collectstatic to find static files
    # STATICFILES_DIRS = (
    #     os.path.join(BaseSettings.BASE_DIR, 'static'),
    # )
    BaseSettings.MIDDLEWARE += ['whitenoise.middleware.WhiteNoiseMiddleware']
    STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

# deploying to heroku
# django_heroku.settings(locals())
